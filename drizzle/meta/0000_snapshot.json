{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.packages": {
      "name": "packages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "tier": {
          "name": "tier",
          "type": "package_tier",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "monthly_cost": {
          "name": "monthly_cost",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0.00'"
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "key_benefits": {
          "name": "key_benefits",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "is_base_employer_package": {
          "name": "is_base_employer_package",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.appointments": {
      "name": "appointments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "provider_id": {
          "name": "provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "patient_id": {
          "name": "patient_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "appointment_date": {
          "name": "appointment_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "appointment_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "duration": {
          "name": "duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "appointments_patient_id_users_id_fk": {
          "name": "appointments_patient_id_users_id_fk",
          "tableFrom": "appointments",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "patient_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "appointments_provider_id_providers_id_fk": {
          "name": "appointments_provider_id_providers_id_fk",
          "tableFrom": "appointments",
          "tableTo": "providers",
          "schemaTo": "public",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can view all appointments": {
          "name": "Admins can view all appointments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "((auth.role() = 'authenticated'::text) AND is_admin(auth.uid()))"
        },
        "Patients can insert their own appointments": {
          "name": "Patients can insert their own appointments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Patients can update their own appointments": {
          "name": "Patients can update their own appointments",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Patients can view their own appointments": {
          "name": "Patients can view their own appointments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Providers can delete their own appointments": {
          "name": "Providers can delete their own appointments",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Providers can insert their own appointments": {
          "name": "Providers can insert their own appointments",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Providers can update their own appointments": {
          "name": "Providers can update their own appointments",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Providers can view their own appointments": {
          "name": "Providers can view their own appointments",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "sender_id": {
          "name": "sender_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "receiver_id": {
          "name": "receiver_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "thread_id": {
          "name": "thread_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_read": {
          "name": "is_read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "messages_receiver_id_users_id_fk": {
          "name": "messages_receiver_id_users_id_fk",
          "tableFrom": "messages",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "receiver_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "messages_sender_id_users_id_fk": {
          "name": "messages_sender_id_users_id_fk",
          "tableFrom": "messages",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "sender_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can insert their own messages": {
          "name": "Users can insert their own messages",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ],
          "withCheck": "(auth.uid() = sender_id)"
        },
        "Users can view their own messages": {
          "name": "Users can view their own messages",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.patient_profiles": {
      "name": "patient_profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "date_of_birth": {
          "name": "date_of_birth",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "insurance_provider": {
          "name": "insurance_provider",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "insurance_id": {
          "name": "insurance_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "blood_type": {
          "name": "blood_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "allergies": {
          "name": "allergies",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "medications": {
          "name": "medications",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "patient_profiles_user_id_users_id_fk": {
          "name": "patient_profiles_user_id_users_id_fk",
          "tableFrom": "patient_profiles",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can view all patient profiles": {
          "name": "Admins can view all patient profiles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "((auth.role() = 'authenticated'::text) AND is_admin(auth.uid()))"
        },
        "Patients can update their own profile": {
          "name": "Patients can update their own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Patients can insert their own profile": {
          "name": "Patients can insert their own profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Patients can view their own profile": {
          "name": "Patients can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Providers can view profiles of their patients": {
          "name": "Providers can view profiles of their patients",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "hr_contact_info": {
          "name": "hr_contact_info",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.provider_time_blocks": {
      "name": "provider_time_blocks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "provider_id": {
          "name": "provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "start_datetime": {
          "name": "start_datetime",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "end_datetime": {
          "name": "end_datetime",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_unavailable": {
          "name": "is_unavailable",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "provider_time_blocks_provider_id_providers_id_fk": {
          "name": "provider_time_blocks_provider_id_providers_id_fk",
          "tableFrom": "provider_time_blocks",
          "tableTo": "providers",
          "schemaTo": "public",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Providers can manage their own time blocks": {
          "name": "Providers can manage their own time blocks",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "withCheck": "(( SELECT p.user_id\n   FROM providers p\n  WHERE (p.id = provider_time_blocks.provider_id)) = auth.uid())",
          "using": "(( SELECT p.user_id\n   FROM providers p\n  WHERE (p.id = provider_time_blocks.provider_id)) = auth.uid())"
        }
      },
      "isRLSEnabled": false
    },
    "public.providers": {
      "name": "providers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "specialization": {
          "name": "specialization",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "experience_years": {
          "name": "experience_years",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "education": {
          "name": "education",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "certifications": {
          "name": "certifications",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "providers_user_id_users_id_fk": {
          "name": "providers_user_id_users_id_fk",
          "tableFrom": "providers",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "providers_user_id_unique": {
          "columns": [
            "user_id"
          ],
          "nullsNotDistinct": false,
          "name": "providers_user_id_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Allow authenticated read access to providers": {
          "name": "Allow authenticated read access to providers",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Users can update their own provider record": {
          "name": "Users can update their own provider record",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can view their own provider record": {
          "name": "Users can view their own provider record",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.provider_weekly_schedules": {
      "name": "provider_weekly_schedules",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "provider_id": {
          "name": "provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "day_of_week": {
          "name": "day_of_week",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "provider_weekly_schedules_provider_id_providers_id_fk": {
          "name": "provider_weekly_schedules_provider_id_providers_id_fk",
          "tableFrom": "provider_weekly_schedules",
          "tableTo": "providers",
          "schemaTo": "public",
          "columnsFrom": [
            "provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Allow authenticated read access to weekly schedules": {
          "name": "Allow authenticated read access to weekly schedules",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Providers can manage their own weekly schedules": {
          "name": "Providers can manage their own weekly schedules",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "user_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'patient'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "benefit_source": {
          "name": "benefit_source",
          "type": "benefit_source",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'none'"
        },
        "sponsoring_organization_id": {
          "name": "sponsoring_organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "benefit_status": {
          "name": "benefit_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'not_started'"
        },
        "stripe_customer_id": {
          "name": "stripe_customer_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_line1": {
          "name": "address_line1",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_line2": {
          "name": "address_line2",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_city": {
          "name": "address_city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_state": {
          "name": "address_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_postal_code": {
          "name": "address_postal_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address_country": {
          "name": "address_country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "theme_preference": {
          "name": "theme_preference",
          "type": "theme_mode",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'dark'"
        },
        "selected_package_id": {
          "name": "selected_package_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_selected_package_id_fkey": {
          "name": "users_selected_package_id_fkey",
          "tableFrom": "users",
          "tableTo": "packages",
          "schemaTo": "public",
          "columnsFrom": [
            "selected_package_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "users_selected_package_id_packages_id_fk": {
          "name": "users_selected_package_id_packages_id_fk",
          "tableFrom": "users",
          "tableTo": "packages",
          "schemaTo": "public",
          "columnsFrom": [
            "selected_package_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "users_sponsoring_organization_id_organizations_id_fk": {
          "name": "users_sponsoring_organization_id_organizations_id_fk",
          "tableFrom": "users",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": [
            "sponsoring_organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false,
          "name": "users_email_unique"
        },
        "users_stripe_customer_id_unique": {
          "columns": [
            "stripe_customer_id"
          ],
          "nullsNotDistinct": false,
          "name": "users_stripe_customer_id_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Allow admins to update user roles": {
          "name": "Allow admins to update user roles",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "is_admin()"
        },
        "Allow users to read their own data": {
          "name": "Allow users to read their own data",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Allow users to update their own data": {
          "name": "Allow users to update their own data",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Allow users with admin role to read all users": {
          "name": "Allow users with admin role to read all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can view their own data": {
          "name": "Users can view their own data",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.user_benefit_verification_attempts": {
      "name": "user_benefit_verification_attempts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_first_name": {
          "name": "submitted_first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_last_name": {
          "name": "submitted_last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_dob": {
          "name": "submitted_dob",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_phone": {
          "name": "submitted_phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "submitted_work_email": {
          "name": "submitted_work_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "verification_attempt_timestamp": {
          "name": "verification_attempt_timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "status": {
          "name": "status",
          "type": "verification_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "failure_reason": {
          "name": "failure_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_benefit_verification_attempts_user_id_users_id_fk": {
          "name": "user_benefit_verification_attempts_user_id_users_id_fk",
          "tableFrom": "user_benefit_verification_attempts",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.organization_approved_emails": {
      "name": "organization_approved_emails",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "uq_organization_email": {
          "columns": [
            "organization_id",
            "email"
          ],
          "nullsNotDistinct": false,
          "name": "uq_organization_email"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.message_attachments": {
      "name": "message_attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "file_url": {
          "name": "file_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "file_size": {
          "name": "file_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "message_attachments_message_id_messages_id_fk": {
          "name": "message_attachments_message_id_messages_id_fk",
          "tableFrom": "message_attachments",
          "tableTo": "messages",
          "schemaTo": "public",
          "columnsFrom": [
            "message_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can insert attachments for their messages": {
          "name": "Users can insert attachments for their messages",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ],
          "withCheck": "(EXISTS ( SELECT 1\n   FROM messages\n  WHERE ((messages.id = message_attachments.message_id) AND (messages.sender_id = auth.uid()))))"
        },
        "Users can view attachments for their messages": {
          "name": "Users can view attachments for their messages",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.organization_packages": {
      "name": "organization_packages",
      "schema": "",
      "columns": {
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "package_id": {
          "name": "package_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "organization_packages_organization_id_fkey": {
          "name": "organization_packages_organization_id_fkey",
          "tableFrom": "organization_packages",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": [
            "organization_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "organization_packages_package_id_fkey": {
          "name": "organization_packages_package_id_fkey",
          "tableFrom": "organization_packages",
          "tableTo": "packages",
          "schemaTo": "public",
          "columnsFrom": [
            "package_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "organization_packages_package_id_packages_id_fk": {
          "name": "organization_packages_package_id_packages_id_fk",
          "tableFrom": "organization_packages",
          "tableTo": "packages",
          "schemaTo": "public",
          "columnsFrom": [
            "package_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "organization_packages_organization_id_package_id_pk": {
          "name": "organization_packages_organization_id_package_id_pk",
          "columns": [
            "organization_id",
            "package_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.appointment_status": {
      "name": "appointment_status",
      "values": [
        "scheduled",
        "completed",
        "cancelled",
        "pending",
        "confirmed"
      ],
      "schema": "public"
    },
    "public.benefit_source": {
      "name": "benefit_source",
      "values": [
        "employer_or_plan",
        "partner_or_parent",
        "none"
      ],
      "schema": "public"
    },
    "public.benefit_status": {
      "name": "benefit_status",
      "values": [
        "pending_verification",
        "verified",
        "declined",
        "not_applicable",
        "not_started"
      ],
      "schema": "public"
    },
    "public.package_status": {
      "name": "package_status",
      "values": [
        "purchased",
        "active",
        "expired",
        "completed"
      ],
      "schema": "public"
    },
    "public.package_tier": {
      "name": "package_tier",
      "values": [
        "basic",
        "premium",
        "custom",
        "silver",
        "gold",
        "platinum"
      ],
      "schema": "public"
    },
    "public.purchase_type": {
      "name": "purchase_type",
      "values": [
        "subscription",
        "one-time"
      ],
      "schema": "public"
    },
    "public.theme_mode": {
      "name": "theme_mode",
      "values": [
        "light",
        "dark",
        "system"
      ],
      "schema": "public"
    },
    "public.treatment_milestone": {
      "name": "treatment_milestone",
      "values": [
        "patient_details",
        "initial_consultation",
        "treatment_phase",
        "prenatal_care"
      ],
      "schema": "public"
    },
    "public.treatment_status": {
      "name": "treatment_status",
      "values": [
        "pending",
        "in_progress",
        "completed"
      ],
      "schema": "public"
    },
    "public.user_role": {
      "name": "user_role",
      "values": [
        "admin",
        "staff",
        "provider",
        "patient"
      ],
      "schema": "public"
    },
    "public.verification_status": {
      "name": "verification_status",
      "values": [
        "pending",
        "success",
        "failed"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "packages": {
        "columns": {
          "key_benefits": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      },
      "providers": {
        "columns": {
          "education": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          },
          "certifications": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}